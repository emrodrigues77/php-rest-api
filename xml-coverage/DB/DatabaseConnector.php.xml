<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="DatabaseConnector.php" path="/DB">
    <totals>
      <lines total="30" comments="0" code="30" executable="10" executed="8" percent="80.00"/>
      <methods count="2" tested="1" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\DB\DatabaseConnector" start="5" executable="10" executed="8" crap="3.33">
      <namespace name="App\DB"/>
      <method name="__construct" signature="__construct()" start="9" end="25" crap="2.50" executable="9" executed="7" coverage="50"/>
      <method name="getConnection" signature="getConnection()" start="27" end="29" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="10">
        <covered by="AuthTest::UserLogin with data set &quot;correctLogin&quot;"/>
        <covered by="AuthTest::UserLogin with data set &quot;incorrectLogin&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctOneAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctAllAuthorsRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;nonExistentAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;malformedAuthorRequestId&quot;"/>
      </line>
      <line nr="11">
        <covered by="AuthTest::UserLogin with data set &quot;correctLogin&quot;"/>
        <covered by="AuthTest::UserLogin with data set &quot;incorrectLogin&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctOneAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctAllAuthorsRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;nonExistentAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;malformedAuthorRequestId&quot;"/>
      </line>
      <line nr="12">
        <covered by="AuthTest::UserLogin with data set &quot;correctLogin&quot;"/>
        <covered by="AuthTest::UserLogin with data set &quot;incorrectLogin&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctOneAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctAllAuthorsRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;nonExistentAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;malformedAuthorRequestId&quot;"/>
      </line>
      <line nr="13">
        <covered by="AuthTest::UserLogin with data set &quot;correctLogin&quot;"/>
        <covered by="AuthTest::UserLogin with data set &quot;incorrectLogin&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctOneAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctAllAuthorsRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;nonExistentAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;malformedAuthorRequestId&quot;"/>
      </line>
      <line nr="14">
        <covered by="AuthTest::UserLogin with data set &quot;correctLogin&quot;"/>
        <covered by="AuthTest::UserLogin with data set &quot;incorrectLogin&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctOneAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctAllAuthorsRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;nonExistentAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;malformedAuthorRequestId&quot;"/>
      </line>
      <line nr="17">
        <covered by="AuthTest::UserLogin with data set &quot;correctLogin&quot;"/>
        <covered by="AuthTest::UserLogin with data set &quot;incorrectLogin&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctOneAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctAllAuthorsRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;nonExistentAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;malformedAuthorRequestId&quot;"/>
      </line>
      <line nr="18">
        <covered by="AuthTest::UserLogin with data set &quot;correctLogin&quot;"/>
        <covered by="AuthTest::UserLogin with data set &quot;incorrectLogin&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctOneAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctAllAuthorsRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;nonExistentAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;malformedAuthorRequestId&quot;"/>
      </line>
      <line nr="28">
        <covered by="AuthTest::UserLogin with data set &quot;correctLogin&quot;"/>
        <covered by="AuthTest::UserLogin with data set &quot;incorrectLogin&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctOneAuthorRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;correctAllAuthorsRequest&quot;"/>
        <covered by="AuthorsControllerTest::processRequest with data set &quot;nonExistentAuthorRequest&quot;"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\DB</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DatabaseConnector</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dbConnection</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$host</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getenv</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DB_HOST'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$port</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getenv</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DB_PORT'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$db</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getenv</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DB_DATABASE'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getenv</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DB_USERNAME'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getenv</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DB_PASSWORD'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dbConnection</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\PDO</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">mysql:host=</token>
        <token name="T_VARIABLE">$host</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">;port=</token>
        <token name="T_VARIABLE">$port</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">;charset=utf8mb4;dbname=</token>
        <token name="T_VARIABLE">$db</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$pass</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NAME_FULLY_QUALIFIED">\PDOException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">            </token>
        <token name="T_EXIT">exit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getConnection</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dbConnection</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="30">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
